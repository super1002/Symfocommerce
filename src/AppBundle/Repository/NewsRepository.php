<?php

namespace AppBundle\Repository;

use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\Common\Persistence\ManagerRegistry;
use Doctrine\ORM\NonUniqueResultException;
use Doctrine\ORM\NoResultException;
use Doctrine\ORM\QueryBuilder;
use AppBundle\Entity\News;

/**
 * NewsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NewsRepository extends ServiceEntityRepository
{
    /**
     * Repository constructor.
     * @param ManagerRegistry $registry
     */
    public function __construct(ManagerRegistry $registry)
    {
        parent::__construct($registry, News::class);
    }

    /**
     * @param $slug string
     * @return mixed
     * @throws NoResultException
     * @throws NonUniqueResultException
     */
    public function findBySlug(string $slug): ?News
    {
        return $this->getEntityManager()
            ->createQueryBuilder()
            ->select('n')
            ->from(News::class, 'n')
            ->where('n.slug = :slug')
            ->setParameter('slug', $slug)
            ->getQuery()
            ->getSingleResult();
    }

    /**
     * query for admin paginator
     *
     * @return QueryBuilder
     */
    public function getAllNewsAdminQB(): QueryBuilder
    {
        $qb = $this->getEntityManager()
            ->createQueryBuilder()
            ->select('n')
            ->from(News::class, 'n');

        return $qb;
    }

    /**
     * @return News|null
     * @throws NonUniqueResultException
     */
    public function getLastNews(): ?News
    {
        return $this->getEntityManager()
            ->createQueryBuilder()
            ->select('n')
            ->from(News::class, 'n')
            ->orderBy('n.date', 'DESC')
            ->setMaxResults(1)
            ->getQuery()
            ->getOneOrNullResult();
    }

    /**
     * Create query for paginator
     *
     * @return QueryBuilder
     */
    public function getNewsQB(): QueryBuilder
    {
        return $this->getEntityManager()
            ->createQueryBuilder()
            ->select('a')
            ->from(News::class, 'a')
            ->orderBy('a.date', 'DESC');
    }
}
