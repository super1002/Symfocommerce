<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Favourites;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\Common\Persistence\ManagerRegistry;
use Doctrine\ORM\NonUniqueResultException;
use AppBundle\Entity\User;
use Doctrine\ORM\NoResultException;

/**
 * FavouritesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FavouritesRepository extends ServiceEntityRepository
{
    /**
     * Repository constructor.
     * @param ManagerRegistry $registry
     */
    public function __construct(ManagerRegistry $registry)
    {
        parent::__construct($registry, Favourites::class);
    }

    /**
     * @param User $user
     * @param integer $productId
     * @return bool
     * @throws NonUniqueResultException
     * @throws NoResultException
     */
    public function checkIsLiked(User $user, int $productId): bool
    {
        $qb = $this->getEntityManager()
            ->createQueryBuilder()
            ->select('count(f.id)')
            ->from(Favourites::class, 'f')
            ->innerJoin('f.user', 'u')
            ->innerJoin('f.product', 'p')
            ->where('u = :user')
            ->andWhere('p.id = :product_id')
            ->setParameters([
                'product_id' => $productId,
                'user' => $user
            ]);

        if ($qb->getQuery()->getSingleScalarResult()) {
            return true;
        }

        return false;
    }
}
